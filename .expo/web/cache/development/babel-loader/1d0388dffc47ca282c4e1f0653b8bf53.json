{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\1\\\\Documents\\\\goit_hw\\\\REACT\\\\native_project\\\\global_project\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { AuthScreen } from \"./screens/AuthScreen\";\nimport { MainScreen } from \"./screens/tab/MainScreen\";\nimport { ProfileScreen } from \"./screens/tab/ProfileScreen\";\nimport { CreateScreen } from \"./screens/tab/CreateScreen\";\nimport { auth } from \"./firebase/config\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuth = _useState2[0],\n      setIsAuth = _useState2[1];\n\n  useEffect(function () {\n    AuthStateChanged();\n    currentUser();\n  }, [isAuth]);\n\n  var currentUser = function currentUser() {\n    var currentUser;\n    return _regeneratorRuntime.async(function currentUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.currentUser);\n\n          case 2:\n            currentUser = _context.sent;\n            console.log('currentUser', currentUser);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var AuthStateChanged = function AuthStateChanged() {\n    return _regeneratorRuntime.async(function AuthStateChanged$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(auth.onAuthStateChanged(function (user) {\n              setIsAuth(user);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, isAuth ? React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      inactiveBackgroundColor: \"#51995d38\",\n      activeBackgroundColor: \"#51995d38\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab.Screen, {\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused,\n            size = _ref.size,\n            color = _ref.color;\n        return React.createElement(Ionicons, {\n          name: \"md-images\",\n          size: focused ? 35 : size,\n          color: color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    name: \"Main\",\n    component: MainScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused,\n            size = _ref2.size,\n            color = _ref2.color;\n        return React.createElement(Ionicons, {\n          name: \"ios-add-circle-outline\",\n          size: focused ? 42 : size,\n          color: color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    name: \"Create\",\n    component: CreateScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused,\n            size = _ref3.size,\n            color = _ref3.color;\n        return React.createElement(Ionicons, {\n          name: \"md-settings\",\n          size: focused ? 35 : size,\n          color: color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    name: \"Profile\",\n    component: ProfileScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })) : React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Auth\",\n    component: AuthScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/1/Documents/goit_hw/REACT/native_project/global_project/App.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","createBottomTabNavigator","Provider","store","Ionicons","AuthScreen","MainScreen","ProfileScreen","CreateScreen","auth","Stack","Tab","App","isAuth","setIsAuth","AuthStateChanged","currentUser","console","log","onAuthStateChanged","user","showLabel","inactiveBackgroundColor","activeBackgroundColor","tabBarIcon","focused","size","color","headerShown","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { AuthScreen } from \"./screens/AuthScreen\";\nimport { MainScreen } from \"./screens/tab/MainScreen\";\nimport { ProfileScreen } from \"./screens/tab/ProfileScreen\";\nimport { CreateScreen } from \"./screens/tab/CreateScreen\";\nimport { auth } from \"./firebase/config\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const [isAuth, setIsAuth] = useState(null);\n\n  useEffect(() => {\n    AuthStateChanged();\n    currentUser();\n  }, [isAuth]);\n\n  const currentUser = async () => {\n    const currentUser=await auth.currentUser;\n    console.log('currentUser', currentUser);\n  };\n\n  const AuthStateChanged = async () => {\n    await auth.onAuthStateChanged((user) => {\n      setIsAuth(user);\n    });\n  };\n\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        {isAuth ? (\n          <Tab.Navigator\n            tabBarOptions={{\n              showLabel: false,\n              inactiveBackgroundColor:\"#51995d38\",\n              activeBackgroundColor: \"#51995d38\",\n            }}\n          >            \n            <Tab.Screen\n              options={{\n                tabBarIcon: ({ focused, size, color }) => (\n                  <Ionicons\n                    name=\"md-images\"\n                    size={focused ? 35 : size}\n                    color={color}\n                  />\n                ),\n              }}\n              name=\"Main\"\n              component={MainScreen}\n            />\n            <Tab.Screen\n              options={{\n                tabBarIcon: ({ focused, size, color }) => (\n                  <Ionicons\n                    name=\"ios-add-circle-outline\"\n                    size={focused ? 42 : size}\n                    color={color}\n                  />\n                ),\n              }}\n              name=\"Create\"\n              component={CreateScreen}\n            />\n\n            <Tab.Screen\n              options={{\n                tabBarIcon: ({ focused, size, color }) => (\n                  <Ionicons\n                    name=\"md-settings\"\n                    size={focused ? 35 : size}\n                    color={color}\n                  />\n                ),\n              }}\n              name=\"Profile\"\n              component={ProfileScreen}\n            />\n          </Tab.Navigator>\n        ) : (\n          <Stack.Navigator>\n            <Stack.Screen\n              options={{\n                headerShown: false,\n              }}\n              name=\"Auth\"\n              component={AuthScreen}\n            />\n          </Stack.Navigator>\n        )}\n      </NavigationContainer>\n    </Provider>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}