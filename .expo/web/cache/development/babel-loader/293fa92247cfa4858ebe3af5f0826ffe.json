{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\1\\\\Documents\\\\goit_hw\\\\REACT\\\\native_project\\\\global_project\\\\screens\\\\tab\\\\MainScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useDispatch } from \"react-redux\";\nimport { auth, firestore } from \"../../firebase/config\";\nexport var MainScreen = function MainScreen() {\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allPosts = _useState2[0],\n      setAllPosts = _useState2[1];\n\n  useEffect(function () {\n    currentUser();\n  });\n  useEffect(function () {\n    getCollection();\n  }, []);\n\n  var currentUser = function currentUser() {\n    var currentUser;\n    return _regeneratorRuntime.async(function currentUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.currentUser);\n\n          case 2:\n            currentUser = _context.sent;\n            dispatch({\n              type: \"CURRENT_USER\",\n              payload: {\n                userName: currentUser.displayName,\n                userId: currentUser.uid,\n                avatar: currentUser.photoURL\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getCollection = function getCollection() {\n    return _regeneratorRuntime.async(function getCollection$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(firestore.collection(\"posts\").onSnapshot(function (data) {\n              setAllPosts(data.docs.map(function (doc) {\n                return _objectSpread({}, doc.data(), {\n                  id: doc.id\n                });\n              }));\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: allPosts,\n    keyExtractor: function keyExtractor(item, indx) {\n      return indx.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.imageBlock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.postImage,\n        source: {\n          uri: item.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#51995d38\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 50\n  },\n  imageBlock: {\n    width: 300,\n    borderRadius: 10,\n    height: 240,\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n    padding: 20\n  },\n  postImage: {\n    width: 220,\n    height: 150,\n    marginBottom: 10,\n    borderRadius: 10,\n    right: 10,\n    bottom: 10,\n    position: \"absolute\"\n  }\n});","map":{"version":3,"sources":["C:/Users/1/Documents/goit_hw/REACT/native_project/global_project/screens/tab/MainScreen.js"],"names":["React","useEffect","useState","useDispatch","auth","firestore","MainScreen","dispatch","allPosts","setAllPosts","currentUser","getCollection","type","payload","userName","displayName","userId","uid","avatar","photoURL","collection","onSnapshot","data","docs","map","doc","id","styles","container","item","indx","toString","imageBlock","postImage","uri","image","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingTop","width","borderRadius","height","marginBottom","padding","right","bottom","position"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, View, FlatList, Image } from \"react-native\";\nimport { useDispatch } from \"react-redux\";\nimport { auth, firestore } from \"../../firebase/config\";\n\nexport const MainScreen = () => {\n  const dispatch = useDispatch();\n\n  const [allPosts, setAllPosts] = useState([]);\n\n  useEffect(() => {\n    currentUser();\n  });\n\n  useEffect(() => {\n    getCollection();\n  }, []);\n\n  const currentUser = async () => {\n    const currentUser = await auth.currentUser;\n    // console.log('currentUser', currentUser)\n    dispatch({\n      type: \"CURRENT_USER\",\n      payload: {\n        userName: currentUser.displayName,\n        userId: currentUser.uid,\n        avatar: currentUser.photoURL,\n      },\n    });\n  };\n\n  const getCollection = async () => {\n    await firestore.collection(\"posts\").onSnapshot((data) => {\n      setAllPosts(\n        data.docs.map((doc) => {\n          return { ...doc.data(), id: doc.id };\n        })\n      );\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n     \n      <FlatList\n        data={allPosts}\n        keyExtractor={(item, indx) => indx.toString()}\n        renderItem={({ item }) => {\n          return (\n            <View style={styles.imageBlock}>\n              <Image style={styles.postImage} source={{ uri: item.image }} />\n            </View>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#51995d38\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 50,\n  },\n\n  imageBlock: {\n    width: 300,\n    borderRadius: 10,\n    height: 240,\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n    padding:20\n  },\n\n  postImage: {\n    width: 220,\n    height: 150,\n    marginBottom: 10,\n    borderRadius: 10,\n    right: 10,\n    bottom: 10,\n    position: \"absolute\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}