{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\1\\\\Documents\\\\goit_hw\\\\REACT\\\\native_project\\\\global_project\\\\screens\\\\tab\\\\ProfileScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { CollectionDrawing } from \"../../components/CollectionDrawing\";\nimport { useSelector } from \"react-redux\";\nimport { auth, firestore } from \"../../firebase/config\";\nexport var ProfileScreen = function ProfileScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUserPost = _useState2[0],\n      setcurrentUserPost = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId,\n      userName = _useSelector.userName;\n\n  useEffect(function () {\n    getCurrentUserPosts();\n  }, [userId]);\n\n  var getCurrentUserPosts = function getCurrentUserPosts() {\n    return _regeneratorRuntime.async(function getCurrentUserPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firestore.collection(\"posts\").where(\"userId\", \"==\", userId).onSnapshot(function (data) {\n              return setcurrentUserPost(data.docs.map(function (doc) {\n                return doc.data();\n              }));\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(auth.signOut());\n\n          case 2:\n            dispatch({\n              type: \"USER_SIGNOUT\"\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btn,\n    onPress: signOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.btnTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, \"SignOut \", userName)), React.createElement(View, {\n    style: {\n      marginTop: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.myPostTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, userName, \" posts\"), React.createElement(CollectionDrawing, {\n    data: currentUserPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  btn: {\n    height: 40,\n    width: \"auto\",\n    backgroundColor: \"#556b2f\",\n    padding: 10,\n    borderRadius: 18,\n    marginTop: 80,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btnTitle: {\n    color: \"white\",\n    fontSize: 18\n  },\n  myPostTitle: {\n    fontSize: 24,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/1/Documents/goit_hw/REACT/native_project/global_project/screens/tab/ProfileScreen.js"],"names":["React","useState","useEffect","CollectionDrawing","useSelector","auth","firestore","ProfileScreen","currentUserPost","setcurrentUserPost","state","user","userId","userName","getCurrentUserPosts","collection","where","onSnapshot","data","docs","map","doc","signOut","dispatch","type","styles","container","btn","btnTitle","marginTop","myPostTitle","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","padding","borderRadius","color","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { CollectionDrawing } from \"../../components/CollectionDrawing\";\nimport { useSelector } from \"react-redux\";\nimport { auth, firestore } from \"../../firebase/config\";\n\nexport const ProfileScreen = () => {\n  const [currentUserPost, setcurrentUserPost] = useState([]);\n\n  const { userId, userName } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    getCurrentUserPosts();\n  }, [userId]);\n\n  const getCurrentUserPosts = async () => {\n    await firestore\n      .collection(\"posts\")\n      .where(\"userId\", \"==\", userId)\n      .onSnapshot((data) =>\n        setcurrentUserPost(data.docs.map((doc) => doc.data()))\n      );\n  };\n\n\n  const signOut = async () => {\n    await auth.signOut();\n    dispatch({ type: \"USER_SIGNOUT\" });\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.btn} onPress={signOut}>\n  <Text style={styles.btnTitle}>SignOut {userName}</Text>\n      </TouchableOpacity>\n      <View style={{ marginTop: 40 }}>\n      <Text style={styles.myPostTitle}>{userName} posts</Text>\n        <CollectionDrawing data={currentUserPost} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  btn: {\n    height: 40,\n    width: \"auto\",\n    backgroundColor: \"#556b2f\",\n    padding:10,\n    borderRadius: 18,\n    marginTop: 80,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  btnTitle: {\n    color: \"white\",\n    fontSize: 18,\n  },\n  myPostTitle:{\nfontSize:24,\ntextAlign:\"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}