{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\1\\\\Documents\\\\goit_hw\\\\REACT\\\\native_project\\\\global_project\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Provider } from 'react-redux';\nimport { store } from \"../redux/store\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { AuthScreen } from \"./screens/AuthScreen\";\nimport { MainScreen } from \"./screens/tab/MainScreen\";\nimport { MapScreen } from \"./screens/tab/MapScreen\";\nimport { CreateScreen } from \"./screens/tab/CreateScreen\";\nimport db from \"./firebase/config\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuth = _useState2[0],\n      setIsAuth = _useState2[1];\n\n  useEffect(function () {\n    AuthStateChanged();\n  }, [isAuth]);\n\n  var AuthStateChanged = function AuthStateChanged() {\n    return _regeneratorRuntime.async(function AuthStateChanged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.auth().onAuthStateChanged(function (user) {\n              console.log(\" --- user onAuthStateChanged ---\", isAuth);\n              setIsAuth(user);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, isAuth ? React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused,\n            size = _ref.size,\n            color = _ref.color;\n        return React.createElement(Ionicons, {\n          name: \"ios-beer\",\n          size: focused ? 35 : size,\n          color: color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }\n        });\n      }\n    },\n    name: \"Main\",\n    component: MainScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Screen, {\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused,\n            size = _ref2.size,\n            color = _ref2.color;\n        return React.createElement(Ionicons, {\n          name: \"ios-add-circle-outline\",\n          size: focused ? 42 : 40,\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }\n        });\n      }\n    },\n    name: \"Create\",\n    component: CreateScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Screen, {\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused,\n            size = _ref3.size,\n            color = _ref3.color;\n        return React.createElement(Ionicons, {\n          name: \"ios-planet\",\n          size: focused ? 35 : size,\n          color: color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }\n        });\n      }\n    },\n    name: \"Map\",\n    component: MapScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  })) : React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Auth\",\n    component: AuthScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 8\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/1/Documents/goit_hw/REACT/native_project/global_project/App.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","createBottomTabNavigator","Provider","store","Ionicons","AuthScreen","MainScreen","MapScreen","CreateScreen","db","Stack","Tab","App","isAuth","setIsAuth","AuthStateChanged","auth","onAuthStateChanged","user","console","log","showLabel","tabBarIcon","focused","size","color","headerShown"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Platform, Button, Image } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {Provider} from 'react-redux';\nimport {store} from '../redux/store';\nimport { Ionicons } from \"@expo/vector-icons\";\n// import { HomeScreen } from \"./screens/HomeScreen\";\n// import { BlogScreen } from \"./screens/BlogScreen\";\n// import { ProfileScreen } from \"./screens/ProfileScreen\";\nimport { AuthScreen } from \"./screens/AuthScreen\";\n// import { RegisterScreen } from \"./screens/RegisterScreen\";\nimport { MainScreen } from \"./screens/tab/MainScreen\";\nimport { MapScreen } from \"./screens/tab/MapScreen\";\nimport { CreateScreen } from \"./screens/tab/CreateScreen\";\nimport db from \"./firebase/config\";\nimport { Alert } from \"react-native\";\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n// const content = (\n//   <Stack.Navigator>\n//     <Stack.Screen\n//       options={{\n//         headerTitleAlign: \"center\",\n//         headerTitle: \"My screen\",\n//         headerStyle: {\n//           backgroundColor: Platform.OS === \"ios\" ? \"white\" : \"blue\",\n//         },\n//         headerTintColor: Platform.OS === \"ios\" ? \"blue\" : \"white\",\n//       }}\n//       name=\"Home\"\n//       component={HomeScreen}\n//     />\n//     <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n//     <Stack.Screen name=\"Blog\" component={BlogScreen} />\n//   </Stack.Navigator>\n// );\n\n// let content = (\n//   <Tab.Navigator\n//     tabBarOptions={{\n//       showLabel: false,\n//     }}\n//   >\n//     <Tab.Screen\n//       options={{\n//         tabBarIcon: ({ focused, size, color }) => (\n//           <Ionicons name=\"ios-beer\" size={focused ? 35 : size} color={color} />\n//         ),\n//       }}\n//       name=\"Main\"\n//       component={MainScreen}\n//     />\n//     <Tab.Screen\n//       options={{\n//         tabBarIcon: ({ focused, size, color }) => (\n//           <Ionicons\n//             name=\"ios-add-circle-outline\"\n//             size={focused ? 42 : 40}\n//             color={\"red\"}\n//           />\n//         ),\n//       }}\n//       name=\"Create\"\n//     >\n//       {(props) => {\n//         return <CreateScreen {...props} />;\n//       }}\n//     </Tab.Screen>\n//     <Tab.Screen\n//       options={{\n//         tabBarIcon: ({ focused, size, color }) => (\n//           <Ionicons\n//             name=\"ios-planet\"\n//             size={focused ? 35 : size}\n//             color={color}\n//           />\n//         ),\n//       }}\n//       name=\"Map\"\n//       component={MapScreen}\n//     />\n//   </Tab.Navigator>\n// );\n\n// const useRoute = (isAuth) => {\n//   if (isAuth) {\n//     return content;\n//   }\n\n//   return (content = (\n//     <Stack.Navigator>\n//       <Stack.Screen\n//         options={{\n//           headerShown: false,\n//           // headerBackground: () => (\n//           //   <Image\n//           //     style={{ height: 90 }}\n//           //     source={require(\"./assets/images/triangles.png\")}\n//           //   />\n//           // ),\n//         }}\n//         name=\"Auth\"\n//         component={AuthScreen}\n//       />\n//       {/* <Stack.Screen\n//         options={{ headerShown: false }}\n//         name=\"Register\"\n//         component={RegisterScreen}\n//       /> */}\n//     </Stack.Navigator>\n//   ));\n// };\n\n// export default function App() {\n//   const routing = useRoute(false);\n\n//   return <NavigationContainer>{routing}</NavigationContainer>;\n// }\n\nexport default function App() {\n  const [isAuth, setIsAuth] = useState(null);\n\n  useEffect(() => {\n    AuthStateChanged();\n  }, [isAuth]);\n\n  const AuthStateChanged = async () => {\n    await db.auth().onAuthStateChanged((user) => {\n      console.log(\" --- user onAuthStateChanged ---\", isAuth);\n      setIsAuth(user);\n    });\n  };\n\n  return (\n    <Provider store={store}>\n    <NavigationContainer>\n      {isAuth ? (\n        <Tab.Navigator\n          tabBarOptions={{\n            showLabel: false,\n          }}\n        >\n          <Tab.Screen\n            options={{\n              tabBarIcon: ({ focused, size, color }) => (\n                <Ionicons\n                  name=\"ios-beer\"\n                  size={focused ? 35 : size}\n                  color={color}\n                />\n              ),\n            }}\n            name=\"Main\"\n            component={MainScreen}\n          />\n          <Tab.Screen\n            options={{\n              tabBarIcon: ({ focused, size, color }) => (\n                <Ionicons\n                  name=\"ios-add-circle-outline\"\n                  size={focused ? 42 : 40}\n                  color={\"red\"}\n                />\n              ),\n            }}\n            name=\"Create\"\n            component={CreateScreen}\n          />\n\n          <Tab.Screen\n            options={{\n              tabBarIcon: ({ focused, size, color }) => (\n                <Ionicons\n                  name=\"ios-planet\"\n                  size={focused ? 35 : size}\n                  color={color}\n                />\n              ),\n            }}\n            name=\"Map\"\n            component={MapScreen}\n          />\n        </Tab.Navigator>\n      ) : (\n        <Stack.Navigator>\n       <Stack.Screen\n        options={{\n          headerShown: false,\n        }}\n        name=\"Auth\"\n        component={AuthScreen}\n      />\n      \n    </Stack.Navigator>\n      )}\n    </NavigationContainer>\n    </Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}