{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\1\\\\Documents\\\\goit_hw\\\\REACT\\\\native_project\\\\global_project\\\\screens\\\\tab\\\\CreateScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { firestore } from \"../../firebase/config\";\nimport { useSelector } from \"react-redux\";\nexport var CreateScreen = function CreateScreen() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userId = _useSelector.userId,\n      userName = _useSelector.userName;\n\n  console.log('userId', userId);\n\n  var addPost = function addPost() {\n    return _regeneratorRuntime.async(function addPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firestore.collection(\"posts\").add({\n              image: \"https://cdn.pixabay.com/photo/2020/04/06/14/15/landscape-5009868_960_720.jpg\",\n              like: \"9\",\n              userId: userId,\n              userName: userName\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, StyleSheet.absoluteFill),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/images/road.jpg\"),\n    style: {\n      flex: 1,\n      width: null,\n      height: null\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.btn,\n    onPress: addPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.btnTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"ADD\")));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  btn: {\n    height: 40,\n    width: 100,\n    backgroundColor: \"#556b2f\",\n    borderRadius: 18,\n    marginTop: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btnTitle: {\n    color: \"white\",\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["C:/Users/1/Documents/goit_hw/REACT/native_project/global_project/screens/tab/CreateScreen.js"],"names":["React","firestore","useSelector","CreateScreen","state","user","userId","userName","console","log","addPost","collection","add","image","like","styles","container","StyleSheet","absoluteFill","require","flex","width","height","btn","btnTitle","create","backgroundColor","alignItems","justifyContent","borderRadius","marginTop","color","fontSize"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,SAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,qBACHD,WAAW,CAAC,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADR;AAAA,MACxBC,MADwB,gBACxBA,MADwB;AAAA,MAChBC,QADgB,gBAChBA,QADgB;;AAElCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;;AAEE,MAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACRT,SAAS,CAACU,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkC;AACtCC,cAAAA,KAAK,EACH,8EAFoC;AAItCC,cAAAA,IAAI,EAAE,GAJgC;AAKtCR,cAAAA,MAAM,EAAEA,MAL8B;AAMtCC,cAAAA,QAAQ,EAAEA;AAN4B,aAAlC,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAWA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,oBAAOC,UAAU,CAACC,YAAlB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEC,OAAO,gCADjB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,KAAK,EAAE,IAAlB;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADF,EAOE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEP,MAAM,CAACQ,GAAhC;AAAqC,IAAA,OAAO,EAAEb,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACS,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADR,CAPF,CADF;AAaD,CA5BM;AA8BP,IAAMT,MAAM,GAAGE,UAAU,CAACQ,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETM,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BL,EAAAA,GAAG,EAAE;AACHD,IAAAA,MAAM,EAAE,EADL;AAEHD,IAAAA,KAAK,EAAE,GAFJ;AAGHK,IAAAA,eAAe,EAAE,SAHd;AAIHG,IAAAA,YAAY,EAAE,EAJX;AAKHC,IAAAA,SAAS,EAAE,EALR;AAMHF,IAAAA,cAAc,EAAE,QANb;AAOHD,IAAAA,UAAU,EAAE;AAPT,GAP0B;AAgB/BH,EAAAA,QAAQ,EAAE;AACRO,IAAAA,KAAK,EAAE,OADC;AAERC,IAAAA,QAAQ,EAAE;AAFF;AAhBqB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from \"react-native\";\nimport { firestore } from \"../../firebase/config\";\nimport { useSelector } from \"react-redux\";\n\nexport const CreateScreen = () => {\n  const { userId, userName } = useSelector((state) => state.user);\nconsole.log('userId', userId)\n\n  const addPost = async () => {\n    await firestore.collection(\"posts\").add({\n      image:\n        \"https://cdn.pixabay.com/photo/2020/04/06/14/15/landscape-5009868_960_720.jpg\",\n\n      like: \"9\",\n      userId: userId,\n      userName: userName,\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{ ...StyleSheet.absoluteFill }}>\n              <Image\n                source={require(\"../../assets/images/road.jpg\")}\n                style={{ flex: 1, width: null, height: null }}\n              />\n            </View>\n      <TouchableOpacity style={styles.btn} onPress={addPost}>\n              <Text style={styles.btnTitle}>ADD</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  btn: {\n    height: 40,\n    width: 100,\n    backgroundColor: \"#556b2f\",\n    borderRadius: 18,\n    marginTop: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  btnTitle: {\n    color: \"white\",\n    fontSize: 18,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}