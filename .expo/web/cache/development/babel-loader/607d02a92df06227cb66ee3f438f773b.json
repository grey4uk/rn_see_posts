{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\1\\\\Documents\\\\goit_hw\\\\REACT\\\\native_project\\\\global_project\\\\screens\\\\AuthScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { auth } from \"../firebase/config\";\nvar initialState = {\n  email: \"\",\n  password: \"\",\n  displayName: \"\"\n};\nexport var AuthScreen = function AuthScreen() {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setmessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isRegister = _useState6[0],\n      setIsRegister = _useState6[1];\n\n  var currentUser = function currentUser() {\n    var currentUser;\n    return _regeneratorRuntime.async(function currentUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(auth.currentUser);\n\n          case 2:\n            currentUser = _context.sent;\n            console.log(\"currentUser\", currentUser);\n            currentUser ? Alert.alert(\"in\") : Alert.alert(\"wrong\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    currentUser();\n  }, []);\n\n  var registerUser = function registerUser() {\n    var email, password, displayName, user;\n    return _regeneratorRuntime.async(function registerUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            Keyboard.dismiss();\n            email = state.email, password = state.password, displayName = state.displayName;\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(auth.createUserWithEmailAndPassword(email, password));\n\n          case 5:\n            user = _context2.sent;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(user.user.updateProfile({\n              displayName: displayName\n            }));\n\n          case 8:\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](2);\n            setmessage(_context2.t0.message);\n\n          case 13:\n            setState(initialState);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 10]], Promise);\n  };\n\n  var loginUser = function loginUser() {\n    var email, password, user;\n    return _regeneratorRuntime.async(function loginUser$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            Keyboard.dismiss();\n            email = state.email, password = state.password;\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(auth.signInWithEmailAndPassword(email, password));\n\n          case 5:\n            user = _context3.sent;\n            console.log(user);\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](2);\n            setmessage(_context3.t0.message);\n\n          case 12:\n            setState(initialState);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/images/triangles.png\"),\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.Os == \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, !isRegister && React.createElement(TextInput, {\n    style: _objectSpread({}, styles.input, {\n      marginBottom: 20\n    }),\n    placeholder: \"enter nickname\",\n    value: state.displayName,\n    onFocus: function onFocus() {\n      return setmessage(null);\n    },\n    onChangeText: function onChangeText(value) {\n      return setState(_objectSpread({}, state, {\n        displayName: value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  }), React.createElement(TextInput, {\n    style: _objectSpread({}, styles.input, {\n      marginBottom: 20\n    }),\n    placeholder: \"enter email\",\n    value: state.email,\n    onFocus: function onFocus() {\n      return setmessage(null);\n    },\n    onChangeText: function onChangeText(value) {\n      return setState(_objectSpread({}, state, {\n        email: value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"enter password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(value) {\n      return setState(_objectSpread({}, state, {\n        password: value\n      }));\n    },\n    value: state.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), message && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, message), React.createElement(TouchableOpacity, {\n    style: styles.btn,\n    onPress: isRegister ? loginUser : registerUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.btnTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Submit\")), React.createElement(View, {\n    style: styles.btnBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btn,\n    onPress: isRegister ? function () {\n      return setIsRegister(false);\n    } : function () {\n      return setIsRegister(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.btnTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, !isRegister ? \"go Login\" : \"go Register\")))))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  form: {\n    alignItems: \"center\"\n  },\n  input: {\n    borderColor: \"violet\",\n    borderWidth: 2,\n    borderRadius: 18,\n    width: 300,\n    height: 40,\n    paddingLeft: 40,\n    backgroundColor: \"white\"\n  },\n  btnBlock: {\n    flexDirection: \"row\"\n  },\n  btn: {\n    height: 40,\n    width: 100,\n    backgroundColor: \"violet\",\n    borderRadius: 18,\n    marginTop: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btnTitle: {\n    color: \"white\",\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["C:/Users/1/Documents/goit_hw/REACT/native_project/global_project/screens/AuthScreen.js"],"names":["React","useState","useEffect","auth","initialState","email","password","displayName","AuthScreen","state","setState","message","setmessage","isRegister","setIsRegister","currentUser","console","log","Alert","alert","registerUser","Keyboard","dismiss","createUserWithEmailAndPassword","user","updateProfile","loginUser","signInWithEmailAndPassword","require","styles","image","Platform","Os","container","form","input","marginBottom","value","btn","btnTitle","btnBlock","StyleSheet","create","alignItems","justifyContent","flex","resizeMode","width","borderColor","borderWidth","borderRadius","height","paddingLeft","backgroundColor","flexDirection","marginTop","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Button,\n  TextInput,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n  Platform,\n  Keyboard,\n  Image,\n  ImageBackground,\n  TouchableOpacity,\n  Text,\n  Alert,\n} from \"react-native\";\n\nimport {auth} from \"../firebase/config\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  displayName: \"\",\n};\n\nexport const AuthScreen = () => {\n  const [state, setState] = useState(initialState);\n  const [message, setmessage] = useState(null);\n  const [isRegister,setIsRegister]=useState(false);\n\n  const currentUser = async () => {\n    const currentUser = await auth.currentUser;\n    console.log(\"currentUser\", currentUser);\n    currentUser ? Alert.alert(\"in\") : Alert.alert(\"wrong\");\n  };\n\n  useEffect(() => {\n    currentUser();\n    // setIsRegister(false);\n  }, []);\n\n  const registerUser = async () => {\n    Keyboard.dismiss();\n    const { email, password, displayName } = state;\n    try {\n      const user = await auth\n        .createUserWithEmailAndPassword(email, password);\n      // console.log(\"user\", user);\n      await user.user.updateProfile({\n        displayName: displayName,\n      });\n    } catch (error) {\n      // console.log(error);\n      setmessage(error.message);\n    }\n    setState(initialState);\n  };\n\n  const loginUser=async()=>{ Keyboard.dismiss();\n    const { email, password } = state;\n    try {\n      const user = await auth\n        .signInWithEmailAndPassword(email, password);\n        console.log(user);\n    } catch (error) {\n      // console.log(error);\n      setmessage(error.message);\n    }\n    setState(initialState);};\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <ImageBackground\n        source={require(\"../assets/images/triangles.png\")}\n        style={styles.image}\n      >\n        <KeyboardAvoidingView\n          behavior={Platform.Os == \"ios\" ? \"padding\" : \"height\"}\n          style={styles.container}\n        >\n          <View style={styles.form}>\n            {!isRegister&&<TextInput\n              style={{ ...styles.input, marginBottom: 20 }}\n              placeholder=\"enter nickname\"\n              value={state.displayName}\n              onFocus={()=>setmessage(null)}\n              onChangeText={(value) =>\n                setState({ ...state, displayName: value })\n              }\n            />}\n            <TextInput\n              style={{ ...styles.input, marginBottom: 20 }}\n              placeholder=\"enter email\"\n              value={state.email}\n              onFocus={()=>setmessage(null)}\n              onChangeText={(value) => setState({ ...state, email: value })}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"enter password\"\n              secureTextEntry={true}\n              onChangeText={(value) => setState({ ...state, password: value })}\n              value={state.password}\n            />\n            {message && <Text>{message}</Text>}\n            <TouchableOpacity style={styles.btn} onPress={isRegister?loginUser:registerUser}>\n              <Text style={styles.btnTitle}>Submit</Text>\n            </TouchableOpacity>\n            <View style={styles.btnBlock}>\n            <TouchableOpacity style={styles.btn} onPress={isRegister?()=>setIsRegister(false):()=>setIsRegister(true)}>\n              <Text style={styles.btnTitle}>{!isRegister?\"go Login\":\"go Register\"}</Text>\n            </TouchableOpacity>\n            </View>\n          </View>\n        </KeyboardAvoidingView>\n      </ImageBackground>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  form: {\n    alignItems: \"center\",\n  },\n  input: {\n    borderColor: \"violet\",\n    borderWidth: 2,\n    borderRadius: 18,\n    width: 300,\n    height: 40,\n    paddingLeft: 40,\n    backgroundColor: \"white\",\n  },\n  btnBlock:{\n    // flex:1,\n    flexDirection:\"row\",\n  },\n  btn: {\n    height: 40,\n    width: 100,\n    backgroundColor: \"violet\",\n    borderRadius: 18,\n    marginTop: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  btnTitle: {\n    color: \"white\",\n    fontSize: 18,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}