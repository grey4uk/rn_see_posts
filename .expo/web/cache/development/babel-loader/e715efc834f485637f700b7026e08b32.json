{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { configureStore, combineReducers, createReducer } from \"@reduxjs/toolkit\";\nvar initialState = {\n  userName: null,\n  userId: null\n};\nvar reducer = {\n  CURRENT_USER: function CURRENT_USER(state, _ref) {\n    var payload = _ref.payload;\n    console.log(\"reducer --->\", payload);\n    return _objectSpread({}, state, {\n      userName: payload.userName,\n      userId: payload.userId\n    });\n  }\n};\nvar user = createReducer(initialState, reducer);\nvar rootReducer = combineReducers({\n  user: user\n});\nexport var store = configureStore({\n  reducer: rootReducer\n});","map":{"version":3,"sources":["C:/Users/1/Documents/goit_hw/REACT/native_project/global_project/redux/store.js"],"names":["configureStore","combineReducers","createReducer","initialState","userName","userId","reducer","CURRENT_USER","state","payload","console","log","user","rootReducer","store"],"mappings":";;;;;;AAAA,SACIA,cADJ,EAEIC,eAFJ,EAGIC,aAHJ,QAIS,kBAJT;AAME,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,YAAY,EAAE,sBAACC,KAAD,QAAwB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,OAA5B;AACA,6BACKD,KADL;AAEEJ,MAAAA,QAAQ,EAAEK,OAAO,CAACL,QAFpB;AAGEC,MAAAA,MAAM,EAAEI,OAAO,CAACJ;AAHlB;AAKD;AARa,CAAhB;AAWA,IAAMO,IAAI,GAAGV,aAAa,CAACC,YAAD,EAAeG,OAAf,CAA1B;AAEA,IAAMO,WAAW,GAAGZ,eAAe,CAAC;AAClCW,EAAAA,IAAI,EAAJA;AADkC,CAAD,CAAnC;AAIA,OAAO,IAAME,KAAK,GAAGd,cAAc,CAAC;AAClCM,EAAAA,OAAO,EAAEO;AADyB,CAAD,CAA5B","sourcesContent":["import {\r\n    configureStore,\r\n    combineReducers,\r\n    createReducer,\r\n  } from \"@reduxjs/toolkit\";\r\n  \r\n  const initialState = {\r\n    userName: null,\r\n    userId: null,\r\n  };\r\n  \r\n  const reducer = {\r\n    CURRENT_USER: (state, { payload }) => {\r\n      console.log(\"reducer --->\", payload);\r\n      return {\r\n        ...state,\r\n        userName: payload.userName,\r\n        userId: payload.userId,\r\n      };\r\n    },\r\n  };\r\n  \r\n  const user = createReducer(initialState, reducer);\r\n  \r\n  const rootReducer = combineReducers({\r\n    user,\r\n  });\r\n  \r\n  export const store = configureStore({\r\n    reducer: rootReducer,\r\n  });"]},"metadata":{},"sourceType":"module"}